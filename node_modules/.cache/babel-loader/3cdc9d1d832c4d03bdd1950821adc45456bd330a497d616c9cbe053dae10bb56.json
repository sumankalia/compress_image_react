{"ast":null,"code":"var _jsxFileName = \"/Users/sumankalia/Documents/Yt_Tutorials/react-images-demo/src/components/image-compress.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imageSize = file => {\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n  const promise = new Promise((resolve, reject) => {\n    reader.onload = function (e) {\n      const image = new Image();\n      image.src = e.target.result;\n      image.onload = function () {\n        const height = this.height;\n        const width = this.width;\n        resolve({\n          width,\n          height\n        });\n      };\n      image.onerror = reject;\n    };\n  });\n  return promise;\n};\nconst ImageCompressor = () => {\n  const compressImage = async file => {\n    const imageDimensions = await imageSize(file);\n    console.log(imageDimensions);\n  };\n  const uploadImage = () => {\n    const image = compressImage(files[0]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"600px\",\n      margin: \"20px auto\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"file\",\n          onChange: e => uploadImage(e.target.files)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_c = ImageCompressor;\nexport default ImageCompressor;\nvar _c;\n$RefreshReg$(_c, \"ImageCompressor\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","imageSize","file","reader","FileReader","readAsDataURL","promise","Promise","resolve","reject","onload","e","image","Image","src","target","result","height","width","onerror","ImageCompressor","compressImage","imageDimensions","console","log","uploadImage","files","style","margin","children","className","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sumankalia/Documents/Yt_Tutorials/react-images-demo/src/components/image-compress.js"],"sourcesContent":["import React from \"react\";\n\nconst imageSize = (file) => {\n  const reader = new FileReader();\n\n  reader.readAsDataURL(file);\n\n  const promise = new Promise((resolve, reject) => {\n    reader.onload = function (e) {\n      const image = new Image();\n\n      image.src = e.target.result;\n\n      image.onload = function () {\n        const height = this.height;\n        const width = this.width;\n\n        resolve({ width, height });\n      };\n\n      image.onerror = reject;\n    };\n  });\n\n  return promise;\n};\n\nconst ImageCompressor = () => {\n  const compressImage = async (file) => {\n    const imageDimensions = await imageSize(file);\n    console.log(imageDimensions);\n  };\n\n  const uploadImage = () => {\n    const image = compressImage(files[0]);\n  };\n  return (\n    <div style={{ width: \"600px\", margin: \"20px auto\" }}>\n      <form>\n        <div className=\"col\">\n          <input\n            className=\"form-control\"\n            type=\"file\"\n            onChange={(e) => uploadImage(e.target.files)}\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default ImageCompressor;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAIC,IAAI,IAAK;EAC1B,MAAMC,MAAM,GAAG,IAAIC,UAAU,EAAE;EAE/BD,MAAM,CAACE,aAAa,CAACH,IAAI,CAAC;EAE1B,MAAMI,OAAO,GAAG,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IAC/CN,MAAM,CAACO,MAAM,GAAG,UAAUC,CAAC,EAAE;MAC3B,MAAMC,KAAK,GAAG,IAAIC,KAAK,EAAE;MAEzBD,KAAK,CAACE,GAAG,GAAGH,CAAC,CAACI,MAAM,CAACC,MAAM;MAE3BJ,KAAK,CAACF,MAAM,GAAG,YAAY;QACzB,MAAMO,MAAM,GAAG,IAAI,CAACA,MAAM;QAC1B,MAAMC,KAAK,GAAG,IAAI,CAACA,KAAK;QAExBV,OAAO,CAAC;UAAEU,KAAK;UAAED;QAAO,CAAC,CAAC;MAC5B,CAAC;MAEDL,KAAK,CAACO,OAAO,GAAGV,MAAM;IACxB,CAAC;EACH,CAAC,CAAC;EAEF,OAAOH,OAAO;AAChB,CAAC;AAED,MAAMc,eAAe,GAAGA,CAAA,KAAM;EAC5B,MAAMC,aAAa,GAAG,MAAOnB,IAAI,IAAK;IACpC,MAAMoB,eAAe,GAAG,MAAMrB,SAAS,CAACC,IAAI,CAAC;IAC7CqB,OAAO,CAACC,GAAG,CAACF,eAAe,CAAC;EAC9B,CAAC;EAED,MAAMG,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMb,KAAK,GAAGS,aAAa,CAACK,KAAK,CAAC,CAAC,CAAC,CAAC;EACvC,CAAC;EACD,oBACE1B,OAAA;IAAK2B,KAAK,EAAE;MAAET,KAAK,EAAE,OAAO;MAAEU,MAAM,EAAE;IAAY,CAAE;IAAAC,QAAA,eAClD7B,OAAA;MAAA6B,QAAA,eACE7B,OAAA;QAAK8B,SAAS,EAAC,KAAK;QAAAD,QAAA,eAClB7B,OAAA;UACE8B,SAAS,EAAC,cAAc;UACxBC,IAAI,EAAC,MAAM;UACXC,QAAQ,EAAGrB,CAAC,IAAKc,WAAW,CAACd,CAAC,CAACI,MAAM,CAACW,KAAK;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAC7C;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEV,CAAC;AAACC,EAAA,GAtBIjB,eAAe;AAwBrB,eAAeA,eAAe;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}