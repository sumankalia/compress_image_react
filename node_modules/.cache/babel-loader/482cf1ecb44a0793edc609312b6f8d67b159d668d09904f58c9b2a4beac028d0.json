{"ast":null,"code":"var _jsxFileName = \"/Users/sumankalia/Documents/Yt_Tutorials/react-images-demo/src/components/image-compress.js\";\nimport React from \"react\";\nimport imageCompression from \"browser-image-compression\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imageSize = file => {\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n  const promise = new Promise((resolve, reject) => {\n    reader.onload = function (e) {\n      const image = new Image();\n      image.src = e.target.result;\n      image.onload = function () {\n        const height = this.height;\n        const width = this.width;\n        resolve({\n          width,\n          height\n        });\n      };\n      image.onerror = reject;\n    };\n  });\n  return promise;\n};\nconst ImageCompressor = () => {\n  const compressImage = async file => {\n    const imageDimensions = await imageSize(file);\n    console.log(imageDimensions);\n    const options = {\n      maxSizeMB: 1,\n      maxWidthOrHeight: (imageDimensions === null || imageDimensions === void 0 ? void 0 : imageDimensions.width) > 1300 ? 1300 : imageDimensions === null || imageDimensions === void 0 ? void 0 : imageDimensions.width,\n      useWebWorker: true\n    };\n    const compressedImg = await imageCompression(file, options);\n    return compressedImg;\n  };\n  const uploadImage = async files => {\n    const image = await compressImage(files[0]);\n    const imageDimensions = await imageSize(image);\n    console.log({\n      Compressed: imageDimensions\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"600px\",\n      margin: \"20px auto\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"file\",\n          onChange: e => uploadImage(e.target.files)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_c = ImageCompressor;\nexport default ImageCompressor;\nvar _c;\n$RefreshReg$(_c, \"ImageCompressor\");","map":{"version":3,"names":["React","imageCompression","jsxDEV","_jsxDEV","imageSize","file","reader","FileReader","readAsDataURL","promise","Promise","resolve","reject","onload","e","image","Image","src","target","result","height","width","onerror","ImageCompressor","compressImage","imageDimensions","console","log","options","maxSizeMB","maxWidthOrHeight","useWebWorker","compressedImg","uploadImage","files","Compressed","style","margin","children","className","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sumankalia/Documents/Yt_Tutorials/react-images-demo/src/components/image-compress.js"],"sourcesContent":["import React from \"react\";\nimport imageCompression from \"browser-image-compression\";\n\nconst imageSize = (file) => {\n  const reader = new FileReader();\n\n  reader.readAsDataURL(file);\n\n  const promise = new Promise((resolve, reject) => {\n    reader.onload = function (e) {\n      const image = new Image();\n\n      image.src = e.target.result;\n\n      image.onload = function () {\n        const height = this.height;\n        const width = this.width;\n\n        resolve({ width, height });\n      };\n\n      image.onerror = reject;\n    };\n  });\n\n  return promise;\n};\n\nconst ImageCompressor = () => {\n  const compressImage = async (file) => {\n    const imageDimensions = await imageSize(file);\n    console.log(imageDimensions);\n\n    const options = {\n      maxSizeMB: 1,\n      maxWidthOrHeight:\n        imageDimensions?.width > 1300 ? 1300 : imageDimensions?.width,\n      useWebWorker: true,\n    };\n\n    const compressedImg = await imageCompression(file, options);\n\n    return compressedImg;\n  };\n\n  const uploadImage = async (files) => {\n    const image = await compressImage(files[0]);\n    const imageDimensions = await imageSize(image);\n\n    console.log({ Compressed: imageDimensions });\n  };\n  return (\n    <div style={{ width: \"600px\", margin: \"20px auto\" }}>\n      <form>\n        <div className=\"col\">\n          <input\n            className=\"form-control\"\n            type=\"file\"\n            onChange={(e) => uploadImage(e.target.files)}\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default ImageCompressor;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,gBAAgB,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,SAAS,GAAIC,IAAI,IAAK;EAC1B,MAAMC,MAAM,GAAG,IAAIC,UAAU,EAAE;EAE/BD,MAAM,CAACE,aAAa,CAACH,IAAI,CAAC;EAE1B,MAAMI,OAAO,GAAG,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IAC/CN,MAAM,CAACO,MAAM,GAAG,UAAUC,CAAC,EAAE;MAC3B,MAAMC,KAAK,GAAG,IAAIC,KAAK,EAAE;MAEzBD,KAAK,CAACE,GAAG,GAAGH,CAAC,CAACI,MAAM,CAACC,MAAM;MAE3BJ,KAAK,CAACF,MAAM,GAAG,YAAY;QACzB,MAAMO,MAAM,GAAG,IAAI,CAACA,MAAM;QAC1B,MAAMC,KAAK,GAAG,IAAI,CAACA,KAAK;QAExBV,OAAO,CAAC;UAAEU,KAAK;UAAED;QAAO,CAAC,CAAC;MAC5B,CAAC;MAEDL,KAAK,CAACO,OAAO,GAAGV,MAAM;IACxB,CAAC;EACH,CAAC,CAAC;EAEF,OAAOH,OAAO;AAChB,CAAC;AAED,MAAMc,eAAe,GAAGA,CAAA,KAAM;EAC5B,MAAMC,aAAa,GAAG,MAAOnB,IAAI,IAAK;IACpC,MAAMoB,eAAe,GAAG,MAAMrB,SAAS,CAACC,IAAI,CAAC;IAC7CqB,OAAO,CAACC,GAAG,CAACF,eAAe,CAAC;IAE5B,MAAMG,OAAO,GAAG;MACdC,SAAS,EAAE,CAAC;MACZC,gBAAgB,EACd,CAAAL,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEJ,KAAK,IAAG,IAAI,GAAG,IAAI,GAAGI,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEJ,KAAK;MAC/DU,YAAY,EAAE;IAChB,CAAC;IAED,MAAMC,aAAa,GAAG,MAAM/B,gBAAgB,CAACI,IAAI,EAAEuB,OAAO,CAAC;IAE3D,OAAOI,aAAa;EACtB,CAAC;EAED,MAAMC,WAAW,GAAG,MAAOC,KAAK,IAAK;IACnC,MAAMnB,KAAK,GAAG,MAAMS,aAAa,CAACU,KAAK,CAAC,CAAC,CAAC,CAAC;IAC3C,MAAMT,eAAe,GAAG,MAAMrB,SAAS,CAACW,KAAK,CAAC;IAE9CW,OAAO,CAACC,GAAG,CAAC;MAAEQ,UAAU,EAAEV;IAAgB,CAAC,CAAC;EAC9C,CAAC;EACD,oBACEtB,OAAA;IAAKiC,KAAK,EAAE;MAAEf,KAAK,EAAE,OAAO;MAAEgB,MAAM,EAAE;IAAY,CAAE;IAAAC,QAAA,eAClDnC,OAAA;MAAAmC,QAAA,eACEnC,OAAA;QAAKoC,SAAS,EAAC,KAAK;QAAAD,QAAA,eAClBnC,OAAA;UACEoC,SAAS,EAAC,cAAc;UACxBC,IAAI,EAAC,MAAM;UACXC,QAAQ,EAAG3B,CAAC,IAAKmB,WAAW,CAACnB,CAAC,CAACI,MAAM,CAACgB,KAAK;QAAE;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAC7C;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEV,CAAC;AAACC,EAAA,GApCIvB,eAAe;AAsCrB,eAAeA,eAAe;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}